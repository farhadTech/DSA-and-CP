{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
		"cp-extension":{
			"prefix": ["snip"],
			"body": [
				"#include <bits/stdc++.h>",
				"using namespace std;\n",
				"void fun(){",
				"\t$1",
				"}\n",
				"int main(){",
				"\tfun();",
				"\treturn 0;",
				"}\n",
			],
			"description": "Interactive C++ template for CP",
		},

		"cp-extension2":{
			"prefix": ["snip2"],
			"body": [
				"#include <bits/stdc++.h>",
				"using namespace std;",
				"using ll = long long;\n",
				"void solve(){",
				"\t$1",
				"}\n",
				"int main(){",
				"\tios_base::sync_with_stdio(false);",
				"\tcin.tie(NULL);",
				"\tint t; cin >> t;",
				"\twhile(t--){",
				"\t\tsolve();",
				"\t}",
				"\treturn 0;",
				"}\n"
			],
			"description": "C++ template with test cases.",
		},

		"input-array":{
			"prefix": ["inArray"],
			"body": [
				"int n;\tcin >> n;",
				"vector<int> a(n);",
				"for(int i = 0; i < n; i++){",
				"\tcin >> a[i];",
				"}",
				"$1"
			],
			"description": "taking input",
		},


		"print-array": {
			"prefix": ["pArray"],
			"body": [
				"void print_array(vector<int>&a) {",
				"\tfor(int &p: a) {",
				"\t\tcout << p << \" \";",
				"\t}",
				"\tcout << \"\n\"",
				"}",
				"$1"
			],
			"description": "Printing Array"
		},

		"print-2darray": {
			"prefix": ["p2dArray"],
			"body": [
				"void print_array(vector<vector<int>& a, size_of_rows, size_of_cols) {",
					"\tfor(int rows = 0; rows < size_of_rows; rows++) {",
						"\t\tfor(int cols = 0; cols < size_of_cols; cols++) {",
							"\t\t\tcout << vector[rows][cols] << \" \"; ",
						"\t\t}",
						"\t\tcout << '\n';",
					"\t}",
				"}",
				"$1"
			],
			"description": "Printing 2d Array"
		},

		"for-loop":{
			"prefix": ["fori"],
			"body": [
				"for(int i = 0; i < $1; i++){",
				"\t$2",
				"}",
			],
			"description": "for-loop",
		},

		"for-rows":{
			"prefix": ["forrows"],
			"body": [
				"for(int rows = 0; rows < $1; rows++){",
				"\t$2",
				"}",
			],
			"description": "for-loop",
		},

		"for-cols":{
			"prefix": ["forcols"],
			"body": [
				"for(int cols = 0; cols < $1; cols++){",
				"\t$2",
				"}",
			],
			"description": "for-loop",
		},

		"for-loop2":{
			"prefix": ["fori2"],
			"body": [
				"for(int i = 1; i <= $1; i++){",
				"\t$12",
				"}",
			],
			"description": "for-loop2",
		},

		"cout": {
			"prefix":["co"],
			"body": [
				"cout << \"$1\";",
			]
		}
}
